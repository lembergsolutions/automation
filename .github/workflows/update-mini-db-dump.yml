name: Update minidump
on:
  workflow_call:
    inputs:
      php_version:
        required: true
        type: string
      composer_version:
        required: true
        type: string
      branch:
        required: false
        type: string
        default: update-dependencies
      web_root:
        required: false
        type: string
        default: docroot
    secrets:
      COMPOSER_AUTH:
        description: 'Composer auth data'
        required: false

permissions:
  contents: write

jobs:
  update-mini-db-dump:
    name: mini DB dump update
    runs-on: ubuntu-latest
    env:
      COMPOSER_AUTH: '${{ secrets.COMPOSER_AUTH }}'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}

      - name: Merge Composer auth data before using shivammathur/setup-php
        run: |
          GITHUB_DEFAULT_AUTH=$(echo '{"github-oauth": {"github.com": "${{ github.token }}"}}')
          COMPOSER_AUTH=$(jq -cs 'add' <(echo $GITHUB_DEFAULT_AUTH) <(echo "$COMPOSER_AUTH"))
          echo "::add-mask::$COMPOSER_AUTH"
          echo "COMPOSER_AUTH=$COMPOSER_AUTH" >> $GITHUB_ENV

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          php-version: ${{ inputs.php_version }}
          tools: composer:${{ inputs.composer_version }}

      - name: Get Composer config
        id: composer_config
        run: |
          echo "cache_dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer_config.outputs.cache_dir }}
          key: php-${{ inputs.php_version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: php-${{ inputs.php_version }}-

      - name: Build the codebase
        run: |
          composer install --no-interaction --no-progress --optimize-autoloader --prefer-dist

      - name: Start MySQL service & create DB
        run: |
          sudo systemctl start mysql.service
          sudo mysql -proot -e "CREATE USER drupal@localhost IDENTIFIED BY 'drupal'; GRANT ALL ON *.* TO drupal@localhost; FLUSH PRIVILEGES;"
          sudo mysql -proot -e 'CREATE DATABASE drupal;'

      - name: Install the project from existing DB or configuration & export mini dump
        run: |
          if [ -f "../.ci/dump.php.gz" ]; then
            cd ./${{ inputs.web_root }}
            php ./core/scripts/db-tools.php import ../.ci/dump.php.gz
            cd -
          else
            ./vendor/bin/drush si --existing-config --debug
          fi

          ./vendor/bin/drush cache:rebuild
          ./vendor/bin/drush updatedb --yes
          ./vendor/bin/drush config:import --yes

          mkdir -p ./.ci
          cd ./${{ inputs.web_root }}
          php ./core/scripts/db-tools.php dump-database-d8-mysql | gzip --best > ../.ci/dump.php.gz

      - name: Commit the result & push update to the corresponding branch
        run: |
          git add ./.ci/dump.php.gz

          # Get username & email from the previous commit (dependabot's)
          git config --local user.email "ci@lembergsolutions.com"
          git config --local user.name "Lemberg CI"
          # Commit without a message.
          git commit -nm "Mini DB dump update"
          git push origin ${{ inputs.branch }}
